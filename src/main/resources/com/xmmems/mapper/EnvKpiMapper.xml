<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmems.mapper.EnvKpiMapper" >
  <resultMap id="BaseResultMap" type="com.xmmems.domain.env.EnvKpi" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="typeName" property="typeName" jdbcType="VARCHAR" />
    <result column="typeId" property="typeId" jdbcType="INTEGER" />
    <result column="shortName" property="shortName" jdbcType="VARCHAR" />
    <result column="inteShortName" property="inteShortName" jdbcType="VARCHAR" />
    <result column="validUpperLimit" property="validUpperLimit" jdbcType="VARCHAR" />
    <result column="validLowerLimit" property="validLowerLimit" jdbcType="VARCHAR" />
    <result column="outUpperLimit" property="outUpperLimit" jdbcType="VARCHAR" />
    <result column="outLowerLimit" property="outLowerLimit" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="digits" property="digits" jdbcType="INTEGER" />
    <result column="maxRange" property="maxRange" jdbcType="VARCHAR" />
    <result column="minRange" property="minRange" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, code, typeName, typeId, shortName, inteShortName, validUpperLimit, validLowerLimit, 
    outUpperLimit, outLowerLimit, unit, digits, maxRange, minRange
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmmems.domain.env.EnvKpiExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from env_kpi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from env_kpi
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from env_kpi
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmmems.domain.env.EnvKpi" >
    insert into env_kpi (id, name, code, 
      typeName, typeId, shortName, 
      inteShortName, validUpperLimit, validLowerLimit, 
      outUpperLimit, outLowerLimit, unit, 
      digits, maxRange, minRange
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{typeName,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, #{shortName,jdbcType=VARCHAR}, 
      #{inteShortName,jdbcType=VARCHAR}, #{validUpperLimit,jdbcType=VARCHAR}, #{validLowerLimit,jdbcType=VARCHAR}, 
      #{outUpperLimit,jdbcType=VARCHAR}, #{outLowerLimit,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{digits,jdbcType=INTEGER}, #{maxRange,jdbcType=VARCHAR}, #{minRange,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xmmems.domain.env.EnvKpi" >
    insert into env_kpi
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="typeName != null" >
        typeName,
      </if>
      <if test="typeId != null" >
        typeId,
      </if>
      <if test="shortName != null" >
        shortName,
      </if>
      <if test="inteShortName != null" >
        inteShortName,
      </if>
      <if test="validUpperLimit != null" >
        validUpperLimit,
      </if>
      <if test="validLowerLimit != null" >
        validLowerLimit,
      </if>
      <if test="outUpperLimit != null" >
        outUpperLimit,
      </if>
      <if test="outLowerLimit != null" >
        outLowerLimit,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="digits != null" >
        digits,
      </if>
      <if test="maxRange != null" >
        maxRange,
      </if>
      <if test="minRange != null" >
        minRange,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="shortName != null" >
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="inteShortName != null" >
        #{inteShortName,jdbcType=VARCHAR},
      </if>
      <if test="validUpperLimit != null" >
        #{validUpperLimit,jdbcType=VARCHAR},
      </if>
      <if test="validLowerLimit != null" >
        #{validLowerLimit,jdbcType=VARCHAR},
      </if>
      <if test="outUpperLimit != null" >
        #{outUpperLimit,jdbcType=VARCHAR},
      </if>
      <if test="outLowerLimit != null" >
        #{outLowerLimit,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="digits != null" >
        #{digits,jdbcType=INTEGER},
      </if>
      <if test="maxRange != null" >
        #{maxRange,jdbcType=VARCHAR},
      </if>
      <if test="minRange != null" >
        #{minRange,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmmems.domain.env.EnvKpi" >
    update env_kpi
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        typeName = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        typeId = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="shortName != null" >
        shortName = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="inteShortName != null" >
        inteShortName = #{inteShortName,jdbcType=VARCHAR},
      </if>
      <if test="validUpperLimit != null" >
        validUpperLimit = #{validUpperLimit,jdbcType=VARCHAR},
      </if>
      <if test="validLowerLimit != null" >
        validLowerLimit = #{validLowerLimit,jdbcType=VARCHAR},
      </if>
      <if test="outUpperLimit != null" >
        outUpperLimit = #{outUpperLimit,jdbcType=VARCHAR},
      </if>
      <if test="outLowerLimit != null" >
        outLowerLimit = #{outLowerLimit,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="digits != null" >
        digits = #{digits,jdbcType=INTEGER},
      </if>
      <if test="maxRange != null" >
        maxRange = #{maxRange,jdbcType=VARCHAR},
      </if>
      <if test="minRange != null" >
        minRange = #{minRange,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmmems.domain.env.EnvKpi" >
    update env_kpi
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      typeName = #{typeName,jdbcType=VARCHAR},
      typeId = #{typeId,jdbcType=INTEGER},
      shortName = #{shortName,jdbcType=VARCHAR},
      inteShortName = #{inteShortName,jdbcType=VARCHAR},
      validUpperLimit = #{validUpperLimit,jdbcType=VARCHAR},
      validLowerLimit = #{validLowerLimit,jdbcType=VARCHAR},
      outUpperLimit = #{outUpperLimit,jdbcType=VARCHAR},
      outLowerLimit = #{outLowerLimit,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      digits = #{digits,jdbcType=INTEGER},
      maxRange = #{maxRange,jdbcType=VARCHAR},
      minRange = #{minRange,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
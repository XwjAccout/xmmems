<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmems.mapper.AppVersionRecordMapper" >
  <resultMap id="BaseResultMap" type="com.xmmems.domain.app.AppVersionRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="versionCode" property="versionCode" jdbcType="INTEGER" />
    <result column="versionName" property="versionName" jdbcType="VARCHAR" />
    <result column="platformType" property="platformType" jdbcType="INTEGER" />
    <result column="updateType" property="updateType" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="publishTime" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="isPublish" property="isPublish" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xmmems.domain.app.AppVersionRecord" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, versionCode, versionName, platformType, updateType, url, publishTime, isPublish
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xmmems.domain.app.AppVersionRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_version_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmmems.domain.app.AppVersionRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_version_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_version_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app_version_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmmems.domain.app.AppVersionRecord" >
    insert into app_version_record (id, versionCode, versionName, 
      platformType, updateType, url, 
      publishTime, isPublish, remark
      )
    values (#{id,jdbcType=INTEGER}, #{versionCode,jdbcType=INTEGER}, #{versionName,jdbcType=VARCHAR}, 
      #{platformType,jdbcType=INTEGER}, #{updateType,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{isPublish,jdbcType=INTEGER}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xmmems.domain.app.AppVersionRecord" >
    insert into app_version_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="versionCode != null" >
        versionCode,
      </if>
      <if test="versionName != null" >
        versionName,
      </if>
      <if test="platformType != null" >
        platformType,
      </if>
      <if test="updateType != null" >
        updateType,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="publishTime != null" >
        publishTime,
      </if>
      <if test="isPublish != null" >
        isPublish,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null" >
        #{versionCode,jdbcType=INTEGER},
      </if>
      <if test="versionName != null" >
        #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="platformType != null" >
        #{platformType,jdbcType=INTEGER},
      </if>
      <if test="updateType != null" >
        #{updateType,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPublish != null" >
        #{isPublish,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmmems.domain.app.AppVersionRecord" >
    update app_version_record
    <set >
      <if test="versionCode != null" >
        versionCode = #{versionCode,jdbcType=INTEGER},
      </if>
      <if test="versionName != null" >
        versionName = #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="platformType != null" >
        platformType = #{platformType,jdbcType=INTEGER},
      </if>
      <if test="updateType != null" >
        updateType = #{updateType,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        publishTime = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPublish != null" >
        isPublish = #{isPublish,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xmmems.domain.app.AppVersionRecord" >
    update app_version_record
    set versionCode = #{versionCode,jdbcType=INTEGER},
      versionName = #{versionName,jdbcType=VARCHAR},
      platformType = #{platformType,jdbcType=INTEGER},
      updateType = #{updateType,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      publishTime = #{publishTime,jdbcType=TIMESTAMP},
      isPublish = #{isPublish,jdbcType=INTEGER},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmmems.domain.app.AppVersionRecord" >
    update app_version_record
    set versionCode = #{versionCode,jdbcType=INTEGER},
      versionName = #{versionName,jdbcType=VARCHAR},
      platformType = #{platformType,jdbcType=INTEGER},
      updateType = #{updateType,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      publishTime = #{publishTime,jdbcType=TIMESTAMP},
      isPublish = #{isPublish,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
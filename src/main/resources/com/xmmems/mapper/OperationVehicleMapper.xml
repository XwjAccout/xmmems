<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmems.mapper.OperationVehicleMapper" >
  <resultMap id="BaseResultMap" type="com.xmmems.domain.OperationVehicle" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="unitID" property="unitID" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="licence" property="licence" jdbcType="VARCHAR" />
    <result column="responsiblePerson" property="responsiblePerson" jdbcType="VARCHAR" />
    <result column="telephoneNumer" property="telephoneNumer" jdbcType="VARCHAR" />
    <result column="useYear" property="useYear" jdbcType="VARCHAR" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="production" property="production" jdbcType="VARCHAR" />
    <result column="isvalid" property="isvalid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, unitID, type, licence, responsiblePerson, telephoneNumer, useYear, brand, production, 
    isvalid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmmems.domain.OperationVehicleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_vehicle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from operation_vehicle
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operation_vehicle
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmmems.domain.OperationVehicle" >
    insert into operation_vehicle (id, unitID, type, 
      licence, responsiblePerson, telephoneNumer, 
      useYear, brand, production, 
      isvalid)
    values (#{id,jdbcType=INTEGER}, #{unitID,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{licence,jdbcType=VARCHAR}, #{responsiblePerson,jdbcType=VARCHAR}, #{telephoneNumer,jdbcType=VARCHAR}, 
      #{useYear,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, #{production,jdbcType=VARCHAR}, 
      #{isvalid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xmmems.domain.OperationVehicle" >
    insert into operation_vehicle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="unitID != null" >
        unitID,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="licence != null" >
        licence,
      </if>
      <if test="responsiblePerson != null" >
        responsiblePerson,
      </if>
      <if test="telephoneNumer != null" >
        telephoneNumer,
      </if>
      <if test="useYear != null" >
        useYear,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="production != null" >
        production,
      </if>
      <if test="isvalid != null" >
        isvalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="unitID != null" >
        #{unitID,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="licence != null" >
        #{licence,jdbcType=VARCHAR},
      </if>
      <if test="responsiblePerson != null" >
        #{responsiblePerson,jdbcType=VARCHAR},
      </if>
      <if test="telephoneNumer != null" >
        #{telephoneNumer,jdbcType=VARCHAR},
      </if>
      <if test="useYear != null" >
        #{useYear,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="production != null" >
        #{production,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmmems.domain.OperationVehicle" >
    update operation_vehicle
    <set >
      <if test="unitID != null" >
        unitID = #{unitID,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="licence != null" >
        licence = #{licence,jdbcType=VARCHAR},
      </if>
      <if test="responsiblePerson != null" >
        responsiblePerson = #{responsiblePerson,jdbcType=VARCHAR},
      </if>
      <if test="telephoneNumer != null" >
        telephoneNumer = #{telephoneNumer,jdbcType=VARCHAR},
      </if>
      <if test="useYear != null" >
        useYear = #{useYear,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="production != null" >
        production = #{production,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmmems.domain.OperationVehicle" >
    update operation_vehicle
    set unitID = #{unitID,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      licence = #{licence,jdbcType=VARCHAR},
      responsiblePerson = #{responsiblePerson,jdbcType=VARCHAR},
      telephoneNumer = #{telephoneNumer,jdbcType=VARCHAR},
      useYear = #{useYear,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      production = #{production,jdbcType=VARCHAR},
      isvalid = #{isvalid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
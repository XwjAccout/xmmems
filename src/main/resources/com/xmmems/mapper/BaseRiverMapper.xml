<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmems.mapper.BaseRiverMapper" >
  <resultMap id="BaseResultMap" type="com.xmmems.domain.base.BaseRiver" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="basinName" property="basinName" jdbcType="VARCHAR" />
    <result column="basinCode" property="basinCode" jdbcType="VARCHAR" />
    <result column="riverName" property="riverName" jdbcType="VARCHAR" />
    <result column="riverCode" property="riverCode" jdbcType="VARCHAR" />
    <result column="createAt" property="createAt" jdbcType="TIMESTAMP" />
    <result column="updateAt" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, basinName, basinCode, riverName, riverCode, createAt, updateAt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmmems.domain.base.BaseRiverExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_river
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_river
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_river
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmmems.domain.base.BaseRiver" >
    insert into base_river (id, basinName, basinCode, 
      riverName, riverCode, createAt, 
      updateAt)
    values (#{id,jdbcType=INTEGER}, #{basinName,jdbcType=VARCHAR}, #{basinCode,jdbcType=VARCHAR}, 
      #{riverName,jdbcType=VARCHAR}, #{riverCode,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xmmems.domain.base.BaseRiver" >
    insert into base_river
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="basinName != null" >
        basinName,
      </if>
      <if test="basinCode != null" >
        basinCode,
      </if>
      <if test="riverName != null" >
        riverName,
      </if>
      <if test="riverCode != null" >
        riverCode,
      </if>
      <if test="createAt != null" >
        createAt,
      </if>
      <if test="updateAt != null" >
        updateAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="basinName != null" >
        #{basinName,jdbcType=VARCHAR},
      </if>
      <if test="basinCode != null" >
        #{basinCode,jdbcType=VARCHAR},
      </if>
      <if test="riverName != null" >
        #{riverName,jdbcType=VARCHAR},
      </if>
      <if test="riverCode != null" >
        #{riverCode,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmmems.domain.base.BaseRiver" >
    update base_river
    <set >
      <if test="basinName != null" >
        basinName = #{basinName,jdbcType=VARCHAR},
      </if>
      <if test="basinCode != null" >
        basinCode = #{basinCode,jdbcType=VARCHAR},
      </if>
      <if test="riverName != null" >
        riverName = #{riverName,jdbcType=VARCHAR},
      </if>
      <if test="riverCode != null" >
        riverCode = #{riverCode,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        createAt = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        updateAt = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmmems.domain.base.BaseRiver" >
    update base_river
    set basinName = #{basinName,jdbcType=VARCHAR},
      basinCode = #{basinCode,jdbcType=VARCHAR},
      riverName = #{riverName,jdbcType=VARCHAR},
      riverCode = #{riverCode,jdbcType=VARCHAR},
      createAt = #{createAt,jdbcType=TIMESTAMP},
      updateAt = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmems.mapper.EnvEquipmentManagerMapper" >
  <resultMap id="BaseResultMap" type="com.xmmems.domain.env.EnvEquipmentManager" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="displayName" property="displayName" jdbcType="VARCHAR" />
    <result column="stationName" property="stationName" jdbcType="VARCHAR" />
    <result column="stationId" property="stationId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="directive" property="directive" jdbcType="VARCHAR" />
    <result column="doubleSeq" property="doubleSeq" jdbcType="VARCHAR" />
    <result column="bitSeq" property="bitSeq" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="controlFlag" property="controlFlag" jdbcType="CHAR" />
    <result column="warnLevel" property="warnLevel" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, displayName, stationName, stationId, type, directive, doubleSeq, bitSeq, 
    status, controlFlag, warnLevel, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmmems.domain.env.EnvEquipmentManagerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from env_equipment_manager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from env_equipment_manager
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from env_equipment_manager
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmmems.domain.env.EnvEquipmentManager" >
    insert into env_equipment_manager (id, name, displayName, 
      stationName, stationId, type, 
      directive, doubleSeq, bitSeq, 
      status, controlFlag, warnLevel, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{displayName,jdbcType=VARCHAR}, 
      #{stationName,jdbcType=VARCHAR}, #{stationId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{directive,jdbcType=VARCHAR}, #{doubleSeq,jdbcType=VARCHAR}, #{bitSeq,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{controlFlag,jdbcType=CHAR}, #{warnLevel,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xmmems.domain.env.EnvEquipmentManager" >
    insert into env_equipment_manager
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="displayName != null" >
        displayName,
      </if>
      <if test="stationName != null" >
        stationName,
      </if>
      <if test="stationId != null" >
        stationId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="directive != null" >
        directive,
      </if>
      <if test="doubleSeq != null" >
        doubleSeq,
      </if>
      <if test="bitSeq != null" >
        bitSeq,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="controlFlag != null" >
        controlFlag,
      </if>
      <if test="warnLevel != null" >
        warnLevel,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null" >
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="stationName != null" >
        #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null" >
        #{stationId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="directive != null" >
        #{directive,jdbcType=VARCHAR},
      </if>
      <if test="doubleSeq != null" >
        #{doubleSeq,jdbcType=VARCHAR},
      </if>
      <if test="bitSeq != null" >
        #{bitSeq,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="controlFlag != null" >
        #{controlFlag,jdbcType=CHAR},
      </if>
      <if test="warnLevel != null" >
        #{warnLevel,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmmems.domain.env.EnvEquipmentManager" >
    update env_equipment_manager
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null" >
        displayName = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="stationName != null" >
        stationName = #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null" >
        stationId = #{stationId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="directive != null" >
        directive = #{directive,jdbcType=VARCHAR},
      </if>
      <if test="doubleSeq != null" >
        doubleSeq = #{doubleSeq,jdbcType=VARCHAR},
      </if>
      <if test="bitSeq != null" >
        bitSeq = #{bitSeq,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="controlFlag != null" >
        controlFlag = #{controlFlag,jdbcType=CHAR},
      </if>
      <if test="warnLevel != null" >
        warnLevel = #{warnLevel,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmmems.domain.env.EnvEquipmentManager" >
    update env_equipment_manager
    set name = #{name,jdbcType=VARCHAR},
      displayName = #{displayName,jdbcType=VARCHAR},
      stationName = #{stationName,jdbcType=VARCHAR},
      stationId = #{stationId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      directive = #{directive,jdbcType=VARCHAR},
      doubleSeq = #{doubleSeq,jdbcType=VARCHAR},
      bitSeq = #{bitSeq,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      controlFlag = #{controlFlag,jdbcType=CHAR},
      warnLevel = #{warnLevel,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
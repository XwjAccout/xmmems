<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmems.mapper.OperationPersonMapper" >
  <resultMap id="BaseResultMap" type="com.xmmems.domain.OperationPerson" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="unitID" property="unitID" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="cardID" property="cardID" jdbcType="VARCHAR" />
    <result column="telephoneNumer" property="telephoneNumer" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="isvalid" property="isvalid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, unitID, account, name, role, cardID, telephoneNumer, sex, isvalid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmmems.domain.OperationPersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from operation_person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operation_person
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmmems.domain.OperationPerson" >
    insert into operation_person (id, unitID, account, 
      name, role, cardID, 
      telephoneNumer, sex, isvalid
      )
    values (#{id,jdbcType=INTEGER}, #{unitID,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{cardID,jdbcType=VARCHAR}, 
      #{telephoneNumer,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{isvalid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xmmems.domain.OperationPerson" >
    insert into operation_person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="unitID != null" >
        unitID,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="cardID != null" >
        cardID,
      </if>
      <if test="telephoneNumer != null" >
        telephoneNumer,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="isvalid != null" >
        isvalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="unitID != null" >
        #{unitID,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="cardID != null" >
        #{cardID,jdbcType=VARCHAR},
      </if>
      <if test="telephoneNumer != null" >
        #{telephoneNumer,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmmems.domain.OperationPerson" >
    update operation_person
    <set >
      <if test="unitID != null" >
        unitID = #{unitID,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="cardID != null" >
        cardID = #{cardID,jdbcType=VARCHAR},
      </if>
      <if test="telephoneNumer != null" >
        telephoneNumer = #{telephoneNumer,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmmems.domain.OperationPerson" >
    update operation_person
    set unitID = #{unitID,jdbcType=INTEGER},
      account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      cardID = #{cardID,jdbcType=VARCHAR},
      telephoneNumer = #{telephoneNumer,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      isvalid = #{isvalid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
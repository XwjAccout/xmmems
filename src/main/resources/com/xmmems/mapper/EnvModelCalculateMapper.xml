<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmems.mapper.EnvModelCalculateMapper" >
  <resultMap id="BaseResultMap" type="com.xmmems.domain.env.EnvModelCalculate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteName" property="siteName" jdbcType="VARCHAR" />
    <result column="siteCode" property="siteCode" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
    <result column="filePath" property="filePath" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xmmems.domain.env.EnvModelCalculateWithBLOBs" extends="BaseResultMap" >
    <result column="inputParam" property="inputParam" jdbcType="LONGVARCHAR" />
    <result column="inputFirstFile" property="inputFirstFile" jdbcType="LONGVARCHAR" />
    <result column="inputSecondFile" property="inputSecondFile" jdbcType="LONGVARCHAR" />
    <result column="outputFirstFile" property="outputFirstFile" jdbcType="LONGVARCHAR" />
    <result column="outputSecondFile" property="outputSecondFile" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, siteName, siteCode, type, startTime, endTime, filePath
  </sql>
  <sql id="Blob_Column_List" >
    inputParam, inputFirstFile, inputSecondFile, outputFirstFile, outputSecondFile
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xmmems.domain.env.EnvModelCalculateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from env_model_calculate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmmems.domain.env.EnvModelCalculateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from env_model_calculate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from env_model_calculate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from env_model_calculate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmmems.domain.env.EnvModelCalculateWithBLOBs" >
    insert into env_model_calculate (id, siteName, siteCode, 
      type, startTime, endTime, 
      filePath, inputParam, inputFirstFile, 
      inputSecondFile, outputFirstFile, 
      outputSecondFile)
    values (#{id,jdbcType=INTEGER}, #{siteName,jdbcType=VARCHAR}, #{siteCode,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{filePath,jdbcType=VARCHAR}, #{inputParam,jdbcType=LONGVARCHAR}, #{inputFirstFile,jdbcType=LONGVARCHAR}, 
      #{inputSecondFile,jdbcType=LONGVARCHAR}, #{outputFirstFile,jdbcType=LONGVARCHAR}, 
      #{outputSecondFile,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xmmems.domain.env.EnvModelCalculateWithBLOBs" >
    insert into env_model_calculate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="siteName != null" >
        siteName,
      </if>
      <if test="siteCode != null" >
        siteCode,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="startTime != null" >
        startTime,
      </if>
      <if test="endTime != null" >
        endTime,
      </if>
      <if test="filePath != null" >
        filePath,
      </if>
      <if test="inputParam != null" >
        inputParam,
      </if>
      <if test="inputFirstFile != null" >
        inputFirstFile,
      </if>
      <if test="inputSecondFile != null" >
        inputSecondFile,
      </if>
      <if test="outputFirstFile != null" >
        outputFirstFile,
      </if>
      <if test="outputSecondFile != null" >
        outputSecondFile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="siteName != null" >
        #{siteName,jdbcType=VARCHAR},
      </if>
      <if test="siteCode != null" >
        #{siteCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="inputParam != null" >
        #{inputParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="inputFirstFile != null" >
        #{inputFirstFile,jdbcType=LONGVARCHAR},
      </if>
      <if test="inputSecondFile != null" >
        #{inputSecondFile,jdbcType=LONGVARCHAR},
      </if>
      <if test="outputFirstFile != null" >
        #{outputFirstFile,jdbcType=LONGVARCHAR},
      </if>
      <if test="outputSecondFile != null" >
        #{outputSecondFile,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmmems.domain.env.EnvModelCalculateWithBLOBs" >
    update env_model_calculate
    <set >
      <if test="siteName != null" >
        siteName = #{siteName,jdbcType=VARCHAR},
      </if>
      <if test="siteCode != null" >
        siteCode = #{siteCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        startTime = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filePath != null" >
        filePath = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="inputParam != null" >
        inputParam = #{inputParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="inputFirstFile != null" >
        inputFirstFile = #{inputFirstFile,jdbcType=LONGVARCHAR},
      </if>
      <if test="inputSecondFile != null" >
        inputSecondFile = #{inputSecondFile,jdbcType=LONGVARCHAR},
      </if>
      <if test="outputFirstFile != null" >
        outputFirstFile = #{outputFirstFile,jdbcType=LONGVARCHAR},
      </if>
      <if test="outputSecondFile != null" >
        outputSecondFile = #{outputSecondFile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xmmems.domain.env.EnvModelCalculateWithBLOBs" >
    update env_model_calculate
    set siteName = #{siteName,jdbcType=VARCHAR},
      siteCode = #{siteCode,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      startTime = #{startTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP},
      filePath = #{filePath,jdbcType=VARCHAR},
      inputParam = #{inputParam,jdbcType=LONGVARCHAR},
      inputFirstFile = #{inputFirstFile,jdbcType=LONGVARCHAR},
      inputSecondFile = #{inputSecondFile,jdbcType=LONGVARCHAR},
      outputFirstFile = #{outputFirstFile,jdbcType=LONGVARCHAR},
      outputSecondFile = #{outputSecondFile,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmmems.domain.env.EnvModelCalculate" >
    update env_model_calculate
    set siteName = #{siteName,jdbcType=VARCHAR},
      siteCode = #{siteCode,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      startTime = #{startTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP},
      filePath = #{filePath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
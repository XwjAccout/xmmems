<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmmems.mapper.EnvWarnRecordMapper" >
  <resultMap id="BaseResultMap" type="com.xmmems.domain.env.EnvWarnRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteId" property="siteId" jdbcType="INTEGER" />
    <result column="excepRecordId" property="excepRecordId" jdbcType="INTEGER" />
    <result column="siteName" property="siteName" jdbcType="VARCHAR" />
    <result column="excepTime" property="excepTime" jdbcType="TIMESTAMP" />
    <result column="excepItemId" property="excepItemId" jdbcType="INTEGER" />
    <result column="excepItemName" property="excepItemName" jdbcType="VARCHAR" />
    <result column="excepItemValue" property="excepItemValue" jdbcType="VARCHAR" />
    <result column="warnType" property="warnType" jdbcType="CHAR" />
    <result column="excepDesc" property="excepDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, siteId, excepRecordId, siteName, excepTime, excepItemId, excepItemName, excepItemValue, 
    warnType,excepDesc
  </sql>
  <select id="selectByExampleWithBLOBs"  parameterType="com.xmmems.domain.env.EnvWarnRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from env_warn_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmmems.domain.env.EnvWarnRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from env_warn_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey"  parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from env_warn_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from env_warn_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmmems.domain.env.EnvWarnRecord" >
    insert into env_warn_record (id, siteId, excepRecordId, 
      siteName, excepTime, excepItemId, 
      excepItemName, excepItemValue, warnType, 
      excepDesc)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{excepRecordId,jdbcType=INTEGER}, 
      #{siteName,jdbcType=VARCHAR}, #{excepTime,jdbcType=TIMESTAMP}, #{excepItemId,jdbcType=INTEGER}, 
      #{excepItemName,jdbcType=VARCHAR}, #{excepItemValue,jdbcType=VARCHAR}, #{warnType,jdbcType=CHAR}, 
      #{excepDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xmmems.domain.env.EnvWarnRecord" >
    insert into env_warn_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="siteId != null" >
        siteId,
      </if>
      <if test="excepRecordId != null" >
        excepRecordId,
      </if>
      <if test="siteName != null" >
        siteName,
      </if>
      <if test="excepTime != null" >
        excepTime,
      </if>
      <if test="excepItemId != null" >
        excepItemId,
      </if>
      <if test="excepItemName != null" >
        excepItemName,
      </if>
      <if test="excepItemValue != null" >
        excepItemValue,
      </if>
      <if test="warnType != null" >
        warnType,
      </if>
      <if test="excepDesc != null" >
        excepDesc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="siteId != null" >
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="excepRecordId != null" >
        #{excepRecordId,jdbcType=INTEGER},
      </if>
      <if test="siteName != null" >
        #{siteName,jdbcType=VARCHAR},
      </if>
      <if test="excepTime != null" >
        #{excepTime,jdbcType=TIMESTAMP},
      </if>
      <if test="excepItemId != null" >
        #{excepItemId,jdbcType=INTEGER},
      </if>
      <if test="excepItemName != null" >
        #{excepItemName,jdbcType=VARCHAR},
      </if>
      <if test="excepItemValue != null" >
        #{excepItemValue,jdbcType=VARCHAR},
      </if>
      <if test="warnType != null" >
        #{warnType,jdbcType=CHAR},
      </if>
      <if test="excepDesc != null" >
        #{excepDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmmems.domain.env.EnvWarnRecord" >
    update env_warn_record
    <set >
      <if test="siteId != null" >
        siteId = #{siteId,jdbcType=INTEGER},
      </if>
      <if test="excepRecordId != null" >
        excepRecordId = #{excepRecordId,jdbcType=INTEGER},
      </if>
      <if test="siteName != null" >
        siteName = #{siteName,jdbcType=VARCHAR},
      </if>
      <if test="excepTime != null" >
        excepTime = #{excepTime,jdbcType=TIMESTAMP},
      </if>
      <if test="excepItemId != null" >
        excepItemId = #{excepItemId,jdbcType=INTEGER},
      </if>
      <if test="excepItemName != null" >
        excepItemName = #{excepItemName,jdbcType=VARCHAR},
      </if>
      <if test="excepItemValue != null" >
        excepItemValue = #{excepItemValue,jdbcType=VARCHAR},
      </if>
      <if test="warnType != null" >
        warnType = #{warnType,jdbcType=CHAR},
      </if>
      <if test="excepDesc != null" >
        excepDesc = #{excepDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xmmems.domain.env.EnvWarnRecord" >
    update env_warn_record
    set siteId = #{siteId,jdbcType=INTEGER},
      excepRecordId = #{excepRecordId,jdbcType=INTEGER},
      siteName = #{siteName,jdbcType=VARCHAR},
      excepTime = #{excepTime,jdbcType=TIMESTAMP},
      excepItemId = #{excepItemId,jdbcType=INTEGER},
      excepItemName = #{excepItemName,jdbcType=VARCHAR},
      excepItemValue = #{excepItemValue,jdbcType=VARCHAR},
      warnType = #{warnType,jdbcType=CHAR},
      excepDesc = #{excepDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmmems.domain.env.EnvWarnRecord" >
    update env_warn_record
    set siteId = #{siteId,jdbcType=INTEGER},
      excepRecordId = #{excepRecordId,jdbcType=INTEGER},
      siteName = #{siteName,jdbcType=VARCHAR},
      excepTime = #{excepTime,jdbcType=TIMESTAMP},
      excepItemId = #{excepItemId,jdbcType=INTEGER},
      excepItemName = #{excepItemName,jdbcType=VARCHAR},
      excepItemValue = #{excepItemValue,jdbcType=VARCHAR},
      warnType = #{warnType,jdbcType=CHAR},
      excepDesc = #{excepDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>